{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","image/corona.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchedAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","Styles","image","src","coronaImage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46855c67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3qmqL\",\"card\":\"Cards_card__1_sYr\",\"infected\":\"Cards_infected__x6pyQ\",\"recovered\":\"Cards_recovered__3RXiM\",\"deaths\":\"Cards_deaths__1rjT2\"};","import React from 'react'\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) =>{\r\n  \r\n    if(!confirmed){\r\n        return \"Loading...\"\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                            <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                            <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                            <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        return {confirmed,recovered,deaths,lastUpdate}\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData =  async () =>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }))\r\n        // console.log(data)\r\n        // console.log(modifiedData);\r\n        return modifiedData;\r\n    } catch (error) {\r\n    console.log(error)       \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) =>country.name)\r\n    } catch (error) {\r\n    console.log(error)        \r\n    }\r\n}","import React,{useState,useEffect} from 'react'\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Chart.module.css'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst Chart = ({data,country}) =>{\r\n\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetchAPI()\r\n        // console.log(dailyData)\r\n    },[])\r\n    \r\n    const lineChart = (\r\n        dailyData.length\r\n        ?\r\n        (<Line\r\n        data ={{\r\n            labels:dailyData.map(({date}) =>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed}) => confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:'true'\r\n            },{\r\n                data:dailyData.map(({deaths}) => deaths),\r\n                label:'deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgb(255,0,0,0.5)',\r\n                fill:'true'\r\n            }]\r\n        }}\r\n        />):null\r\n    )\r\n    console.log(data)\r\n\r\n    const barChart = (\r\n        data.confirmed\r\n        ?\r\n        (\r\n        <Bar\r\n        data={{\r\n            labels:['Infected','Recovered','Deaths'],\r\n            datasets:[{\r\n                label:'People',\r\n                backgroundColor:[\r\n                    'rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)',\r\n                ],\r\n                data:[data.confirmed.value,data.recovered.value,data.deaths.value]\r\n            }]\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true,text:`Current State in ${country}`}\r\n        }}\r\n        />\r\n        )\r\n        :null\r\n    )\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from 'react'\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchedAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchedAPI();\r\n\r\n    },[setFetchedCountries])\r\n    // console.log(fetchedCountries)\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={e => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) =><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react'\r\n\r\nimport {Cards,Chart,CountryPicker} from './components/index';\r\nimport Styles from './App.module.css'\r\nimport coronaImage from './image/corona.png'\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component{\r\n\r\n    state ={\r\n        data:{},\r\n        country:''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        const fetchedData = await fetchData(country)\r\n        // console.log(fetchedData)\r\n        //fetch the data\r\n        //set the state\r\n        this.setState({data:fetchedData,country:country})\r\n\r\n    }\r\n\r\n    render(){\r\n        const {data,country} = this.state\r\n        return (\r\n            <div className={Styles.container}>\r\n                <img className={Styles.image} src={coronaImage}/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__24vsM\",\"image\":\"App_image__n-ynl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3wb-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3ZPD3\"};","module.exports = __webpack_public_path__ + \"static/media/corona.d7265326.png\";"],"sourceRoot":""}